name: cicd-2
on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: [dev, master]
    paths:
      - 'my-app/**'

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: cache node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          cd my-app
          npm ci
      - name: npm build
        run: |
          cd my-app
          npm run build

  set-environment:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      set-env: ${{ steps.get-level.outputs.level }}
    steps:
      - name: echo level
        id: get-level
        run: |
          echo level=${{ github.base_ref }} >> $GITHUB_OUTPUT
          
  image-build:
    runs-on: ubuntu-latest
    needs: set-environment
    strategy:
      matrix:
        env: ["${{ needs.set-environment.outputs.set-env }}"]
    environment: ${{ matrix.env }}
    steps:
      - name: echo
        run: echo ${{ matrix.env }}

  deploy:
    runs-on: ubuntu-latest
    needs: [set-environment, image-build]
    strategy:
      matrix:
        env: [ "${{ needs.set-environment.outputs.set-env }}" ]
    environment: ${{ matrix.env }}
    steps:
      - name: echo
        run: echo ${{ matrix.env }}

  create-pr:
    runs-on: ubuntu-latest
    needs: [set-environment, deploy]
    if: needs.set-environment.outputs.set-env == 'dev'
    steps:
      - name: create branch
        run: |
          git checkout -b release/${{github.run_id }}
          git push origin release/${{github.run_id }}
      - name: create pr
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          gh pr create --base master --head release/${{github.run_id }} --title "release/${{github.run_id }} -> master"