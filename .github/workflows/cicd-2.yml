name: cicd-2
on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: [dev, master]
    paths:
      - 'my-app/**'

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: cache node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          cd my-app
          npm ci
      - name: npm build
        run: |
          cd my-app
          npm run build

  set-environment:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs: # 다른 잡에서 사용할 수 있도록 잡레벨에서 아웃풋을 설정
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: set env
        id: set-env
        run: |
          echo ${{ github.base_ref }}
          echo environment=dev >> $GITHUB_OUTPUT
          
          if [[ ${{ github.base_ref }} == "master" ]]
          then
              echo environment=prod >> $GITHUB_OUTPUT
          fi
      - name: check env
        run: echo ${{ steps.set-env.outputs.environment }}
          
  image-build:
    runs-on: ubuntu-latest
    needs: [set-environment]
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        environment: ["${{ needs.set-environment.outputs.environment }}"]
    environment: ${{ matrix.environment }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Config AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

  deploy:
    runs-on: ubuntu-latest
    needs: [set-environment, image-build] # set-environment의 outputs를 받아와야하니까 추가함
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        environment: ["${{ needs.set-environment.outputs.environment }}"]
    environment: ${{ matrix.environment }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Config AWS credentials
        id: credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

  create-pr:
    runs-on: ubuntu-latest
    needs: [set-environment, deploy]
    if: needs.set-environment.outputs.environment == 'dev'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: create branch
        run: |
          git checkout -b release/${{github.run_id }}
          git push origin release/${{github.run_id }}
      - name: create pr
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          gh pr create --base master --head release/${{github.run_id }} --title "release/${{github.run_id }} -> master" \
          --body "release pr"